# Use the official pixi image with CUDA support
FROM ghcr.io/prefix-dev/pixi:0.53.0-noble-cuda-12.8.1 AS build

# Switch to root to install system packages
USER root

# Install essential system packages for the desktop environment and GUI applications.
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        # Core Desktop and VNC
        tigervnc-standalone-server \
        dbus-x11 \
        xclip \
        xfce4-session \
        xfce4-settings \
        xorg \
        xubuntu-icon-theme \
        \
        # Graphics and rendering libraries for GUI
        libopengl0 \
        mesa-utils \
        libgl1-mesa-dev \
        \
        # Other X11 and related libs (often dependencies of other packages)
        libsm6 \
        libxext6 \
        libgeos-dev \
        libgtk-3-0 \
        \
        # Development tools for building dependencies
        build-essential \
        git \
        \
        # Simple text editor and browser for the desktop
        mousepad \
        epiphany-browser \
        \
        # Fonts and miscellaneous
        fonts-dejavu \
    && apt-get remove -y xfce4-screensaver \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Fix user and group IDs to 1000 to prevent permission issues on host systems.
RUN usermod -u 1000 ubuntu \
    && groupmod -g 1000 ubuntu \
    && usermod -u 1001 pixi \
    && groupmod -g 1001 pixi \
    && chown -R ubuntu:ubuntu /home/ubuntu \
    && chown -R pixi:pixi /home/pixi

# Switch to the non-root 'ubuntu' user
USER ubuntu
WORKDIR /home/ubuntu

# Set up environment variables
ENV MICROSAM_CACHEDIR=/home/ubuntu/microsam_cache
ENV CELLPOSE_LOCAL_MODELS_PATH=/home/ubuntu/cellpose_models
ENV PIXI_CACHE_DIR=/home/ubuntu/.pixi/cache
ENV CONDA_OVERRIDE_CUDA=12.8

# Create necessary directories
RUN mkdir -p ${MICROSAM_CACHEDIR} ${CELLPOSE_LOCAL_MODELS_PATH} ${PIXI_CACHE_DIR}

# Explicitly copy only the required project files and the setup script for the build.
COPY --chown=ubuntu:ubuntu pixi.toml /home/ubuntu/
COPY --chown=ubuntu:ubuntu pixi.lock /home/ubuntu/
COPY --chown=ubuntu:ubuntu setup_desktop.sh /home/ubuntu/

# Install dependencies from the locked environment.
RUN pixi install --locked --all

# Run the script to set up the desktop shortcuts
RUN bash /home/ubuntu/setup_desktop.sh

# Expose the port for Jupyter Lab
EXPOSE 8888

# Command to start the application
CMD ["pixi", "run", "jupyter-lab"]