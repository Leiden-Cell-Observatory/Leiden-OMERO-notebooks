[project]
name = "jupyter-multi-env"
version = "0.1.0"
channels = ["conda-forge", "pytorch"]
platforms = ["win-64", "linux-64"]

[dependencies]
python = "3.12.*"
jupyter = "*"
jupyterlab = "*"
python-dotenv = "*"
# Core packages that all environments should have
ipykernel = "*"
zeroc-ice = "==3.6.5"
omero-py = "*"
jupyter-remote-desktop-proxy = "*"

# Explicitly ask for the GPU version of PyTorch
pytorch-gpu = "*"
torchvision = "*"

[system-requirements]
# This tells pixi to look for packages compatible with CUDA 12.8
cuda = "12.8"

[pypi-dependencies]
ezomero = ">=3.2.0"
pixi-kernel = "*"
# opencv-contrib-python has a conda-forge package, so it is better to get it from there.
opencv-contrib-python = "*"

[feature.microsam.dependencies]
micro_sam = ">=1.6.0,<2"
napari = "*"
napari-omero = "*"

[feature.cellpose.dependencies]
cellpose = ">=4.0.6, <5"

[feature.gui.dependencies]
qt-main = "*"
pyqt = "*"

# We've removed the conflicting pyqt6 dependency from here.
# Relying on `pyqt` from conda-forge should solve your issue.

[environments]
default = { features = ["gui"] }
microsam = { features = ["microsam", "gui"] }
cellpose = { features = ["cellpose", "gui"] }
full = { features = ["microsam", "cellpose", "gui"] }

# Add tasks for easy execution from the command line
[tasks]
# Task to run the Jupyter Lab server
jupyter-lab = "jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root"
# Task to run napari with the microsam environment
napari-microsam = "pixi run -e microsam napari"
# Task to run cellpose with the cellpose environment
cellpose-gui = "pixi run -e cellpose cellpose"